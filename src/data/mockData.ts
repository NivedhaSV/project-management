import type { 
  User, 
  Project, 
  Task, 
  UserStory, 
  Bug, 
  Sprint, 
  Backlog,
  SprintMetrics,
  ProjectMetrics 
} from '@/lib/types';

export const mockUsers: User[] = [
  {
    id: '1',
    email: 'john@example.com',
    name: 'John Doe',
    avatarUrl: 'https://github.com/johndoe.png',
  },
  {
    id: '2',
    email: 'jane@example.com',
    name: 'Jane Smith',
    avatarUrl: 'https://github.com/janesmith.png',
  },
  {
    id: '3',
    email: 'bob@example.com',
    name: 'Bob Johnson',
    avatarUrl: 'https://github.com/bobjohnson.png',
  },
  {
    id: '4',
    email: 'alice@example.com',
    name: 'Alice Brown',
    avatarUrl: 'https://github.com/alicebrown.png',
  },
];

// Use fixed dates to prevent hydration mismatches
const baseDate = new Date('2024-01-01T00:00:00.000Z');

export const mockProjects: Project[] = [
  {
    id: 'proj-1',
    name: 'E-commerce Platform',
    description: 'Modern e-commerce platform with React and Node.js',
    createdAt: '2024-01-01T00:00:00Z',
    updatedAt: '2024-01-15T10:30:00Z',
    ownerId: '1',
    members: [
      { userId: '1', role: 'admin' },
      { userId: '2', role: 'member' },
      { userId: '3', role: 'member' },
    ],
  },
  {
    id: 'proj-2',
    name: 'Mobile Banking App',
    description: 'Secure mobile banking application for iOS and Android',
    createdAt: '2024-01-10T00:00:00Z',
    updatedAt: '2024-01-16T16:45:00Z',
    ownerId: '2',
    members: [
      { userId: '2', role: 'admin' },
      { userId: '3', role: 'member' },
      { userId: '4', role: 'member' },
    ],
  },
];

export const mockSprints: Sprint[] = [
  {
    id: 'sprint-1',
    projectId: 'proj-1',
    name: 'Sprint 1 - User Authentication',
    description: 'Implement user registration, login, and authentication system',
    status: 'completed',
    startDate: '2024-01-01T00:00:00Z',
    endDate: '2024-01-14T23:59:59Z',
    goal: 'Complete user authentication system with secure login/logout',
    createdAt: '2024-01-01T00:00:00Z',
    updatedAt: '2024-01-14T23:59:59Z',
    capacity: 40,
    velocity: 35,
  },
  {
    id: 'sprint-2',
    projectId: 'proj-1',
    name: 'Sprint 2 - Product Catalog',
    description: 'Build product listing, search, and filtering functionality',
    status: 'active',
    startDate: '2024-01-15T00:00:00Z',
    endDate: '2024-01-28T23:59:59Z',
    goal: 'Implement complete product catalog with search and filters',
    createdAt: '2024-01-15T00:00:00Z',
    updatedAt: '2024-01-20T10:30:00Z',
    capacity: 45,
    velocity: 0,
  },
  {
    id: 'sprint-3',
    projectId: 'proj-2',
    name: 'Sprint 1 - Account Management',
    description: 'Core account management features for mobile banking',
    status: 'planning',
    startDate: '2024-01-22T00:00:00Z',
    endDate: '2024-02-04T23:59:59Z',
    goal: 'Complete account overview and basic transaction history',
    createdAt: '2024-01-20T00:00:00Z',
    updatedAt: '2024-01-20T00:00:00Z',
    capacity: 50,
    velocity: 0,
  },
];

export const mockUserStories: UserStory[] = [
  {
    id: 'story-1',
    projectId: 'proj-1',
    sprintId: 'sprint-1',
    title: 'User Registration',
    description: 'As a new user, I want to create an account so that I can access the platform',
    acceptanceCriteria: [
      'User can enter email, password, and confirm password',
      'Email validation is performed',
      'Password strength requirements are enforced',
      'Confirmation email is sent upon successful registration',
      'User is redirected to login page after registration'
    ],
    status: 'done',
    priority: 'high',
    reporterId: '1',
    assigneeId: '2',
    createdAt: '2024-01-01T08:00:00Z',
    updatedAt: '2024-01-10T16:30:00Z',
    storyPoints: 8,
    businessValue: 9,
    tags: ['authentication', 'user-management'],
  },
  {
    id: 'story-2',
    projectId: 'proj-1',
    sprintId: 'sprint-1',
    title: 'User Login',
    description: 'As a registered user, I want to log into my account so that I can access my personalized content',
    acceptanceCriteria: [
      'User can enter email and password',
      'Invalid credentials show appropriate error message',
      'Successful login redirects to dashboard',
      'Remember me option keeps user logged in',
      'Forgot password link is available'
    ],
    status: 'done',
    priority: 'high',
    reporterId: '1',
    assigneeId: '3',
    createdAt: '2024-01-02T09:00:00Z',
    updatedAt: '2024-01-12T14:20:00Z',
    storyPoints: 5,
    businessValue: 8,
    tags: ['authentication', 'user-management'],
  },
  {
    id: 'story-3',
    projectId: 'proj-1',
    sprintId: 'sprint-2',
    title: 'Product Search',
    description: 'As a customer, I want to search for products so that I can find what I need quickly',
    acceptanceCriteria: [
      'Search bar is prominently displayed',
      'Search results are relevant and fast',
      'Search suggestions appear as user types',
      'No results state is handled gracefully',
      'Search history is saved for logged-in users'
    ],
    status: 'inprogress',
    priority: 'high',
    reporterId: '1',
    assigneeId: '2',
    createdAt: '2024-01-15T10:00:00Z',
    updatedAt: '2024-01-20T11:15:00Z',
    storyPoints: 13,
    businessValue: 9,
    tags: ['search', 'product-catalog'],
  },
  {
    id: 'story-4',
    projectId: 'proj-1',
    title: 'Shopping Cart',
    description: 'As a customer, I want to add products to a cart so that I can purchase multiple items',
    acceptanceCriteria: [
      'Add to cart button on product pages',
      'Cart icon shows item count',
      'Cart page shows all added items',
      'Quantity can be updated in cart',
      'Items can be removed from cart'
    ],
    status: 'backlog',
    priority: 'medium',
    reporterId: '1',
    createdAt: '2024-01-18T14:00:00Z',
    updatedAt: '2024-01-18T14:00:00Z',
    storyPoints: 8,
    businessValue: 7,
    tags: ['cart', 'e-commerce'],
  },
  {
    id: 'story-5',
    projectId: 'proj-2',
    sprintId: 'sprint-3',
    title: 'Account Balance View',
    description: 'As a bank customer, I want to view my account balance so that I know how much money I have',
    acceptanceCriteria: [
      'Current balance is displayed prominently',
      'Available balance vs total balance is clear',
      'Balance updates in real-time',
      'Multiple accounts are supported',
      'Balance history is accessible'
    ],
    status: 'todo',
    priority: 'critical',
    reporterId: '2',
    assigneeId: '4',
    createdAt: '2024-01-20T09:00:00Z',
    updatedAt: '2024-01-20T09:00:00Z',
    storyPoints: 5,
    businessValue: 10,
    tags: ['banking', 'account-management'],
  },
];

export const mockTasks: Task[] = [
  {
    id: 'task-1',
    projectId: 'proj-1',
    userStoryId: 'story-1',
    sprintId: 'sprint-1',
    title: 'Create user registration form',
    description: 'Design and implement the user registration form with validation',
    status: 'done',
    priority: 'high',
    assigneeId: '2',
    reporterId: '1',
    createdAt: '2024-01-01T08:30:00Z',
    updatedAt: '2024-01-08T16:00:00Z',
    storyPoints: 3,
    tags: ['frontend', 'forms'],
  },
  {
    id: 'task-2',
    projectId: 'proj-1',
    userStoryId: 'story-1',
    sprintId: 'sprint-1',
    title: 'Implement registration API endpoint',
    description: 'Create backend API for user registration with email verification',
    status: 'done',
    priority: 'high',
    assigneeId: '3',
    reporterId: '1',
    createdAt: '2024-01-02T09:00:00Z',
    updatedAt: '2024-01-09T17:30:00Z',
    storyPoints: 5,
    tags: ['backend', 'api'],
  },
  {
    id: 'task-3',
    projectId: 'proj-1',
    userStoryId: 'story-3',
    sprintId: 'sprint-2',
    title: 'Design search interface',
    description: 'Create responsive search bar with autocomplete functionality',
    status: 'inprogress',
    priority: 'medium',
    assigneeId: '2',
    reporterId: '1',
    createdAt: '2024-01-15T11:00:00Z',
    updatedAt: '2024-01-20T14:30:00Z',
    storyPoints: 5,
    tags: ['frontend', 'ui/ux'],
  },
  {
    id: 'task-4',
    projectId: 'proj-2',
    userStoryId: 'story-5',
    sprintId: 'sprint-3',
    title: 'Create account balance API',
    description: 'Implement secure API endpoint for retrieving account balances',
    status: 'todo',
    priority: 'high',
    assigneeId: '4',
    reporterId: '2',
    createdAt: '2024-01-20T10:00:00Z',
    updatedAt: '2024-01-20T10:00:00Z',
    storyPoints: 8,
    tags: ['backend', 'security'],
  },
  {
    id: 'task-5',
    projectId: 'proj-1',
    title: 'Setup project infrastructure',
    description: 'Configure CI/CD pipeline and deployment environment',
    status: 'done',
    priority: 'high',
    assigneeId: '1',
    reporterId: '1',
    createdAt: '2024-01-01T07:00:00Z',
    updatedAt: '2024-01-03T18:00:00Z',
    storyPoints: 13,
    tags: ['devops', 'infrastructure'],
  },
];

export const mockBugs: Bug[] = [
  {
    id: 'bug-1',
    projectId: 'proj-1',
    taskId: 'task-1',
    userStoryId: 'story-1',
    sprintId: 'sprint-1',
    title: 'Registration form validation not working',
    description: 'The registration form accepts empty email addresses and shows incorrect error messages when validation fails.',
    status: 'resolved',
    severity: 'high',
    reporterId: '2',
    assigneeId: '1',
    createdAt: '2024-01-15T10:30:00Z',
    updatedAt: '2024-01-16T14:20:00Z',
    stepsToReproduce: [
      'Navigate to registration page',
      'Leave email field empty',
      'Enter valid password',
      'Click submit button'
    ],
    expectedBehavior: 'Form should show email validation error',
    actualBehavior: 'Form submits with empty email',
  },
  {
    id: 'bug-2',
    projectId: 'proj-1',
    taskId: 'task-3',
    userStoryId: 'story-3',
    sprintId: 'sprint-2',
    title: 'Search results not responsive on mobile',
    description: 'The search results page layout breaks on mobile devices and tablet screens.',
    status: 'open',
    severity: 'medium',
    reporterId: '1',
    assigneeId: '2',
    createdAt: '2024-01-18T14:20:00Z',
    updatedAt: '2024-01-18T14:20:00Z',
    stepsToReproduce: [
      'Open application on mobile device',
      'Search for any product',
      'View search results page'
    ],
    expectedBehavior: 'Search results should be responsive and readable',
    actualBehavior: 'Layout breaks and content overflows',
  },
  {
    id: 'bug-3',
    projectId: 'proj-2',
    userStoryId: 'story-5',
    title: 'Account balance API timeout',
    description: 'API calls to retrieve account balance frequently timeout during peak hours.',
    status: 'open',
    severity: 'critical',
    reporterId: '4',
    assigneeId: '2',
    createdAt: '2024-01-20T16:45:00Z',
    updatedAt: '2024-01-20T16:45:00Z',
    stepsToReproduce: [
      'Login to mobile app during peak hours (9-11 AM)',
      'Navigate to account balance screen',
      'Wait for balance to load'
    ],
    expectedBehavior: 'Balance loads within 2 seconds',
    actualBehavior: 'Request times out after 30 seconds',
  },
];

export const mockBacklogs: Backlog[] = [
  {
    id: 'backlog-1',
    projectId: 'proj-1',
    name: 'Product Backlog',
    description: 'Main product backlog for e-commerce platform',
    userStories: mockUserStories.filter(story => story.projectId === 'proj-1'),
    createdAt: '2024-01-01T00:00:00Z',
    updatedAt: '2024-01-20T10:30:00Z',
  },
  {
    id: 'backlog-2',
    projectId: 'proj-2',
    name: 'Banking Features Backlog',
    description: 'Feature backlog for mobile banking application',
    userStories: mockUserStories.filter(story => story.projectId === 'proj-2'),
    createdAt: '2024-01-10T00:00:00Z',
    updatedAt: '2024-01-20T09:00:00Z',
  },
];

export const mockSprintMetrics: SprintMetrics[] = [
  {
    sprintId: 'sprint-1',
    plannedStoryPoints: 40,
    completedStoryPoints: 35,
    velocity: 35,
    burndownData: [
      { date: '2024-01-01', remaining: 40 },
      { date: '2024-01-03', remaining: 35 },
      { date: '2024-01-05', remaining: 28 },
      { date: '2024-01-08', remaining: 20 },
      { date: '2024-01-10', remaining: 12 },
      { date: '2024-01-12', remaining: 5 },
      { date: '2024-01-14', remaining: 0 },
    ],
    completionRate: 87.5,
  },
  {
    sprintId: 'sprint-2',
    plannedStoryPoints: 45,
    completedStoryPoints: 15,
    velocity: 15,
    burndownData: [
      { date: '2024-01-15', remaining: 45 },
      { date: '2024-01-17', remaining: 40 },
      { date: '2024-01-19', remaining: 30 },
      { date: '2024-01-21', remaining: 30 },
    ],
    completionRate: 33.3,
  },
];

export const mockProjectMetrics: ProjectMetrics[] = [
  {
    projectId: 'proj-1',
    totalUserStories: 4,
    completedUserStories: 2,
    totalTasks: 4,
    completedTasks: 3,
    totalBugs: 2,
    resolvedBugs: 1,
    averageVelocity: 25,
    teamProductivity: 75,
  },
  {
    projectId: 'proj-2',
    totalUserStories: 1,
    completedUserStories: 0,
    totalTasks: 1,
    completedTasks: 0,
    totalBugs: 1,
    resolvedBugs: 0,
    averageVelocity: 0,
    teamProductivity: 0,
  },
];
